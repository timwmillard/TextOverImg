// Code generated by sqlc. DO NOT EDIT.
// source: user.sql

package store

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO inspirationifier.users (
    User_Name, Password_Hash
) VALUES (
    $1, $2
) 
RETURNING user_id, user_name, password_hash
`

type CreateUserParams struct {
	UserName     string
	PasswordHash string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (InspirationifierUser, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.UserName, arg.PasswordHash)
	var i InspirationifierUser
	err := row.Scan(&i.UserID, &i.UserName, &i.PasswordHash)
	return i, err
}

const getUser = `-- name: GetUser :one
SELECT user_id, user_name, password_hash
FROM inspirationifier.users
WHERE user_name = $1
`

func (q *Queries) GetUser(ctx context.Context, userName string) (InspirationifierUser, error) {
	row := q.db.QueryRowContext(ctx, getUser, userName)
	var i InspirationifierUser
	err := row.Scan(&i.UserID, &i.UserName, &i.PasswordHash)
	return i, err
}
